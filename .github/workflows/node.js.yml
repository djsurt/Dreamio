# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI
env:
  CI: ""
  PORT: ${{ vars.PORT }}
  CONNECTION_URL: ${{ vars.CONNECTION_URL }}

on:
  push:
    branches: [ "ghpages" ]
  pull_request:
    branches: [ "ghpages" ]

jobs:
  server:
     runs-on: ubuntu-latest
     env:
          CI: ""
          PORT: ${{ vars.PORT }}
          CONNECTION_URL: ${{ vars.CONNECTION_URL }}
     defaults:
       run:
         working-directory: ./server

     strategy:
        matrix:
          node-version: [14.x, 16.x]
          # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
          
     steps:
      - uses: actions/checkout@v3
      - name: Use Start Server ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: ./server/package-lock.json

      - run: npm ci --legacy-peer-deps
      - run: npm run build --if-present
        
  build:
  
    needs:
        - server
    runs-on: ubuntu-latest
    env:
         CI: ""
    defaults:
      run:
        working-directory: ./client

    strategy:
      matrix:
        node-version: [14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: ./client/package-lock.json
    
    - run: npm ci --legacy-peer-deps
    - run: npm run build --if-present
    
    - name: Deploy with gh-pages
      run: |
        git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
        npm run deploy -- -u "github-actions-bot <support+actions@github.com>"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
 
